from collections import defaultdict

class Solution:
    def tupleSameProduct(self, nums):
        product_count = defaultdict(int)
        count = 0

        # Iterate through all pairs (i, j) and count product occurrences
        for i in range(len(nums)):
            for j in range(i + 1, len(nums)):
                product = nums[i] * nums[j]
                product_count[product] += 1

        # If a product appears `freq` times, it can form (freq * (freq - 1)) / 2 unique pairs
        for freq in product_count.values():
            if freq > 1:
                count += (freq * (freq - 1)) // 2 * 8  # Each valid pair contributes 8 tuples

        return count
